\ProvidesExplPackage{rescansync}{2022/03/27}{0.0.0}{Re-scan tokens with synctex information}

\cs_generate_variant:Nn \regex_replace_all:nnN {nxN}
\cs_generate_variant:Nn \tl_replace_all:Nnn {Nxn}

\ExplSyntaxOff

\def \rescansyncTMPfixsync {
	\directlua{
saved_synctex_tag=tex.get_synctex_tag()
function handler()
	if not (saved_synctex_tag==nil) and tex.get_synctex_tag()>0 then
		tex.set_synctex_tag(saved_synctex_tag)
		saved_synctex_tag=nil
		luatexbase.remove_from_callback('process_input_buffer', "rescansync: synctex patch callback")
	end
end
luatexbase.add_to_callback('process_input_buffer', handler, "rescansync: synctex patch callback")
	}
}

\ExplSyntaxOn

\def \_RSS_fix_sync: {}
\sys_if_engine_luatex:T { \let \_RSS_fix_sync: \rescansyncTMPfixsync }
%\let \rescansyncTMPfixsync \undefined

\def \_RSS_count {0}
\edef \_RSS_tab_tl {\char_generate:nn {`\^^I} {12}}
\edef \_RSS_j_tl {\char_generate:nn {`\^^J} {12}}

% #1: the macro that contain the content, #2: the number (line offset), #3: the file name
% content is in filecontentsdef format i.e. (active ^^M, active space, tab can be either active tab or other tab)
%
% NOTE: because filecontentsdef make character >= 128 in pdftex active character and
% they cannot be \write safely, we detokenize it then replace ^^M later.
\cs_set_protected:Npn \rescansync:nnn #1 #2 #3 {
	\tl_set:Nx \_RSS_count {\int_eval:n {\_RSS_count+1}}
	\tl_set:Nx \_RSS_filename {RS\_RSS_count-#3}

	\begingroup
		\iow_new:N \_RSS_file
		\iow_open:Nn \_RSS_file {\_RSS_filename}

		% print some initial %... first
		\int_step_inline:nn {#2} {
			\iow_now:Nx \_RSS_file {\iow_char:N \%}
		}

		% print the content
		\str_set:Nn \_RSS_content {#1}
		\tl_replace_all:Nxn \_RSS_content { \cs_to_str:N \^^M } { \iow_newline: }
		\iow_now:Nx \_RSS_file {\_RSS_content}

		\iow_close:N \_RSS_file
	\endgroup

	\_RSS_fix_sync:
	\exp_args:No \input{\_RSS_filename}
}

% #1: the macro that contain the content, #2: the number (line offset)
\cs_set_protected:Npn \rescansync:nn #1 #2 {
	\cs_if_free:NT \currfilename {
		\msg_error:nn {rescansync} {currfile~ package~ not~ loaded!}
	}
	\rescansync:nnn {#1} {#2} {\currfilename}
}
