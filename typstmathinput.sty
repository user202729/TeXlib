\ProvidesExplPackage{typstmathinput}{2023/03/28}{0.0.0}{Typst-style math input format}
\RequirePackage{amsmath}
\RequirePackage{pythonimmediate}
\providecommand\typstmathinputextrapreamble{}
{
	%\directlua{typstmathinput = require "typstmathinput"}
	%\catcode `$ \active
	\cs_new_protected:Npn \typstmathinput_dollar {
		\begingroup
		% optionally change the catcode for convenience but not strictly required
		\char_set_catcode_other:N \  %
		\char_set_catcode_other:N \\
		\char_set_catcode_other:N \{
		\char_set_catcode_other:N \}
		\char_set_catcode_other:N \&
		\char_set_catcode_other:N \^
		%\char_set_catcode_other:N \%
		\typstmathinput_dollar_aux \empty
	}
	\cs_new_protected:Npn \typstmathinput_dollar_aux #1 ◇ {
		\endgroup
		%\directlua{typstmathinput.printdollar("\luaescapestring{\unexpanded\expandafter{#1}}")}
		\expandafter \typstmathinput_printdollar_py \expandafter {#1}
		% the \expandafter is needed to remove the \empty
	}
	\cs_new_protected:Npn \typstmathinput_printdollar_py {\pyc{typstmathinput_printdollar_py()}}

	\cs_new_protected:Npn \typstmathinputenable {
		%\catcode `$ \active
		%\let $ \typstmathinput_dollar
		\sys_if_engine_pdftex:TF {
			\expandafter \let \csname \detokenize{u8:◇}\endcsname \typstmathinput_dollar
		} {
			\errmessage{weird}
		}
	}
	\cs_new_protected:Npn \typstmathinputdisable { \char_set_catcode_math_toggle:N \$ }
	\cs_new_protected:Npn \typstmathinputnormcat {
		% to be used inside a math environment. Avoid fancyvrb or csquotes causing trouble with active characters.
		\char_set_catcode_other:N \|
		\char_set_catcode_other:N \"
	}
}
\pyfilekpse{typstmathinput.py}
\AtBeginDocument{\typstmathinputenable}
