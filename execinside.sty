\ProvidesPackage{execinside}[2022/03/27]
\RequirePackage{module}
\RequirePackage{filecontentsdef}
\RequirePackage{tlanalysispatch}

\begin{module}{\ExplSyntaxOn}{EI}
	
\cs_generate_variant:Nn \EI_append:n {x}
\cs_generate_variant:Nn \int_compare:nNnTF {VNnTF}
\cs_generate_variant:Nn \tl_set:Nn {Nx}
\cs_generate_variant:Nn \int_compare:nNnT {VNnT}
\cs_generate_variant:Nn \cs_if_exist_use:NT {cT}

% ======== define handler functions.
% a few things it can do:
% • \tl_build_gput_right:Nn  to \__result (content being put there must be wrapped in \unexpanded i.e. x-expand to the desired result

\cs_set_protected:Npn \EI_append_raw:n #1 {
	\tl_build_gput_right:Nn \__result {#1}
}

\cs_set_protected:Npn \EI_append:n #1 {
	\EI_append_raw:n {\exp_not:n {#1}}
}


% handler can call this to collect following tokens in the input stream as argument.
% #1: the function to pass argument in.  (arguments are passed as brace-hack-included)
% #2: number of arguments
\cs_set_protected:Npn \EI_collect_arg:Nn #1 #2 {
	\def \__collecting_balanced {#2}
	\def \__balance_level {0}
	\tl_build_gbegin:N \__balanced_content
	\tl_build_gput_right:Nn \__balanced_content {\noexpand #1}
}

\cs_set_protected:Npn \EIhandler_EIexpand {
	\EI_collect_arg:Nn \EI_append:x {1}
}

\cs_set_protected:Npn \EIhandler_EIexecute {
	\EI_collect_arg:Nn \use:n {1}
}

\cs_set_protected:Npn \execinsideprepare:n #1 {
	\tl_build_gbegin:N \__result
	\def \__collecting_balanced {0}
	
	\tl_analysis_map_inline:nn {#1} {
		% reminder: ##1: token, ##2: char code (int), ##3: cat code (hex digit)

		\int_compare:VNnTF \__collecting_balanced > 0 {
			% collecting content.

			\tl_build_gput_right:Nn \__balanced_content {##1}
			\str_case:nn {##3} {
				{1} { \tl_set:Nx \__balance_level {\__balance_level+1} }
				{2} { \tl_set:Nx \__balance_level {\__balance_level-1}
					\int_compare:nNnT {\__balance_level} = {0} {

						% done, call handler function and revert to normal mode.

						\tl_set:Nx \__collecting_balanced {\int_eval:n{\__collecting_balanced-1}}
						\int_compare:VNnT \__collecting_balanced = 0 {
							\tl_build_gend:N \__balanced_content
							\tl_set:Nx \__balanced_content {\__balanced_content}
							\__balanced_content  % ← the handler function is embedded in here
						}
					}
				}
			}
		} {
			\let \__processed \c_false_bool

		
			% check for \EIexecute etc. and handle accordingly.
			\int_compare:nNnT {##2} = {-1} {
				\cs_if_exist_use:cT {
					EIhandler_ \expandafter \cs_to_str:N ##1
				} {
					\let \__processed \c_true_bool
				}
			}
		
			% if not, just append to result.
			\bool_if:NF \__processed {
				\tl_build_gput_right:Nn \__result {##1}
			}
		}
	}

	\tl_build_gend:N \__result
	\tl_set:Nx \__result {\__result}
}

\cs_set_protected:Npn \execinside:n #1 {
	\execinsideprepare:n {#1}
	\__result
}

\cs_set_protected:Npn \execinside_set:Nn #1 #2 {
	\execinsideprepare:n {#2}
	\let #1 \__result
}

\cs_set_protected:Npn \execinside_gset:Nn #1 #2 {
	\execinsideprepare:n {#2}
	\global \let #1 \__result
}

\end{module}
